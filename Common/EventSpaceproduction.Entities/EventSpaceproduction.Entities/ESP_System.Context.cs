//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventSpaceproduction.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ESP_SystemEntities : DbContext
    {
        public ESP_SystemEntities()
            : base("name=ESP_SystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<EmailSetting> EmailSettings { get; set; }
        public DbSet<LicenseData> LicenseDatas { get; set; }
        public DbSet<LicenseType> LicenseTypes { get; set; }
        public DbSet<Permission> Permissions { get; set; }
        public DbSet<Policy> Policies { get; set; }
        public DbSet<RolePermission> RolePermissions { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<UserPassword> UserPasswords { get; set; }
        public DbSet<UserRoleMembership> UserRoleMemberships { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<CompanyInfo> CompanyInfoes { get; set; }
        public DbSet<GGVW_RolePermissionList> GGVW_RolePermissionList { get; set; }
        public DbSet<GGVW_UserAssignedRoles> GGVW_UserAssignedRoles { get; set; }
        public DbSet<GGVW_UserPasswordList> GGVW_UserPasswordList { get; set; }
    
        public virtual int ESPSP_AddPermissionToRole(string roleName, string permissionName, string granted)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var permissionNameParameter = permissionName != null ?
                new ObjectParameter("PermissionName", permissionName) :
                new ObjectParameter("PermissionName", typeof(string));
    
            var grantedParameter = granted != null ?
                new ObjectParameter("Granted", granted) :
                new ObjectParameter("Granted", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_AddPermissionToRole", roleNameParameter, permissionNameParameter, grantedParameter);
        }
    
        public virtual int ESPSP_AddUpdateEmailSetting(string emailType, string emailServer, string port, string emailLogin, string emailPassword, string emailSecurity, string enabled)
        {
            var emailTypeParameter = emailType != null ?
                new ObjectParameter("EmailType", emailType) :
                new ObjectParameter("EmailType", typeof(string));
    
            var emailServerParameter = emailServer != null ?
                new ObjectParameter("EmailServer", emailServer) :
                new ObjectParameter("EmailServer", typeof(string));
    
            var portParameter = port != null ?
                new ObjectParameter("Port", port) :
                new ObjectParameter("Port", typeof(string));
    
            var emailLoginParameter = emailLogin != null ?
                new ObjectParameter("EmailLogin", emailLogin) :
                new ObjectParameter("EmailLogin", typeof(string));
    
            var emailPasswordParameter = emailPassword != null ?
                new ObjectParameter("EmailPassword", emailPassword) :
                new ObjectParameter("EmailPassword", typeof(string));
    
            var emailSecurityParameter = emailSecurity != null ?
                new ObjectParameter("EmailSecurity", emailSecurity) :
                new ObjectParameter("EmailSecurity", typeof(string));
    
            var enabledParameter = enabled != null ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_AddUpdateEmailSetting", emailTypeParameter, emailServerParameter, portParameter, emailLoginParameter, emailPasswordParameter, emailSecurityParameter, enabledParameter);
        }
    
        public virtual int ESPSP_AddUpdateRegisteredCompany(string companyId, string companyName, string address1, string address2, string address3, string city, string state, string postalCode, string country, string phone, string callingId)
        {
            var companyIdParameter = companyId != null ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var callingIdParameter = callingId != null ?
                new ObjectParameter("CallingId", callingId) :
                new ObjectParameter("CallingId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_AddUpdateRegisteredCompany", companyIdParameter, companyNameParameter, address1Parameter, address2Parameter, address3Parameter, cityParameter, stateParameter, postalCodeParameter, countryParameter, phoneParameter, callingIdParameter);
        }
    
        public virtual int ESPSP_AddUser(string username, string firstName, string lastName, string title, string department, string email, string phone, string active, string license, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var licenseParameter = license != null ?
                new ObjectParameter("License", license) :
                new ObjectParameter("License", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_AddUser", usernameParameter, firstNameParameter, lastNameParameter, titleParameter, departmentParameter, emailParameter, phoneParameter, activeParameter, licenseParameter, passwordParameter);
        }
    
        public virtual int ESPSP_AddUserToRole(string userName, string roleName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_AddUserToRole", userNameParameter, roleNameParameter);
        }
    
        public virtual int ESPSP_DeleteEmailSetting(string emailType, string emailServer, string port, string emailLogin, string emailPassword, string emailSecurity, string enabled)
        {
            var emailTypeParameter = emailType != null ?
                new ObjectParameter("EmailType", emailType) :
                new ObjectParameter("EmailType", typeof(string));
    
            var emailServerParameter = emailServer != null ?
                new ObjectParameter("EmailServer", emailServer) :
                new ObjectParameter("EmailServer", typeof(string));
    
            var portParameter = port != null ?
                new ObjectParameter("Port", port) :
                new ObjectParameter("Port", typeof(string));
    
            var emailLoginParameter = emailLogin != null ?
                new ObjectParameter("EmailLogin", emailLogin) :
                new ObjectParameter("EmailLogin", typeof(string));
    
            var emailPasswordParameter = emailPassword != null ?
                new ObjectParameter("EmailPassword", emailPassword) :
                new ObjectParameter("EmailPassword", typeof(string));
    
            var emailSecurityParameter = emailSecurity != null ?
                new ObjectParameter("EmailSecurity", emailSecurity) :
                new ObjectParameter("EmailSecurity", typeof(string));
    
            var enabledParameter = enabled != null ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_DeleteEmailSetting", emailTypeParameter, emailServerParameter, portParameter, emailLoginParameter, emailPasswordParameter, emailSecurityParameter, enabledParameter);
        }
    
        public virtual int ESPSP_RemovePermissionFromRole(string roleName, string permissionName, string granted)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var permissionNameParameter = permissionName != null ?
                new ObjectParameter("PermissionName", permissionName) :
                new ObjectParameter("PermissionName", typeof(string));
    
            var grantedParameter = granted != null ?
                new ObjectParameter("Granted", granted) :
                new ObjectParameter("Granted", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_RemovePermissionFromRole", roleNameParameter, permissionNameParameter, grantedParameter);
        }
    
        public virtual int ESPSP_RemoveUserFromRole(string userName, string roleName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_RemoveUserFromRole", userNameParameter, roleNameParameter);
        }
    
        public virtual int ESPSP_UpdateUser(string username, string firstName, string lastName, string title, string department, string email, string phone, string active, string license, string password, string userId)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var activeParameter = active != null ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(string));
    
            var licenseParameter = license != null ?
                new ObjectParameter("License", license) :
                new ObjectParameter("License", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ESPSP_UpdateUser", usernameParameter, firstNameParameter, lastNameParameter, titleParameter, departmentParameter, emailParameter, phoneParameter, activeParameter, licenseParameter, passwordParameter, userIdParameter);
        }
    }
}
